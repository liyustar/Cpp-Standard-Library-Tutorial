PROJECT( util )
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

#add_subdirectory( src )

#SET (CMAKE_CXX_FLAGS_INIT "-std=c++0x")
add_definitions("-std=c++0x")
AUX_SOURCE_DIRECTORY(. DIR_SRCS)
ADD_EXECUTABLE(array1 array1.cpp)
ADD_EXECUTABLE(vector_test vector_test.cpp)
ADD_EXECUTABLE(vector1 vector1.cpp)
ADD_EXECUTABLE(deque_test deque_test.cpp)
ADD_EXECUTABLE(deque1 deque1.cpp)
ADD_EXECUTABLE(list1 list1.cpp)
ADD_EXECUTABLE(forwardlist_test forwardlist_test.cpp)
ADD_EXECUTABLE(forwardlistfind1 forwardlistfind1.cpp)
# ADD_EXECUTABLE(forwardlistsplice1 forwardlistsplice1.cpp)
ADD_EXECUTABLE(forwardlist1 forwardlist1.cpp)
ADD_EXECUTABLE(setrange1 setrange1.cpp)
ADD_EXECUTABLE(set1 set1.cpp)
ADD_EXECUTABLE(multiset1 multiset1.cpp)
ADD_EXECUTABLE(setcmp1 setcmp1.cpp)
ADD_EXECUTABLE(map1 map1.cpp)
ADD_EXECUTABLE(map2 map2.cpp)
ADD_EXECUTABLE(multimap1 multimap1.cpp)
ADD_EXECUTABLE(mapfind1 mapfind1.cpp)
ADD_EXECUTABLE(mapcmp1 mapcmp1.cpp)
ADD_EXECUTABLE(unordset1 unordset1.cpp)
ADD_EXECUTABLE(hashfunc1 hashfunc1.cpp)
ADD_EXECUTABLE(hashfunc2 hashfunc2.cpp)
ADD_EXECUTABLE(unordinspect1 unordinspect1.cpp)
ADD_EXECUTABLE(unordmultimap1 unordmultimap1.cpp)
ADD_EXECUTABLE(cstylearray1 cstylearray1.cpp)
ADD_EXECUTABLE(refsem1 refsem1.cpp)

#target_link_libraries( main Test )
