PROJECT( stl )
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

#add_subdirectory( src )

#SET (CMAKE_CXX_FLAGS_INIT "-std=c++0x")
add_definitions("-std=c++0x")
AUX_SOURCE_DIRECTORY(. DIR_SRCS)
ADD_EXECUTABLE(vector1 vector1.cpp)
ADD_EXECUTABLE(deque1 deque1.cpp)
ADD_EXECUTABLE(array1 array1.cpp)
ADD_EXECUTABLE(list1 list1.cpp)
ADD_EXECUTABLE(list2 list2.cpp)
ADD_EXECUTABLE(forwardlist1 forwardlist1.cpp)
ADD_EXECUTABLE(multiset1 multiset1.cpp)
ADD_EXECUTABLE(multimap1 multimap1.cpp)
ADD_EXECUTABLE(unordmultiset1 unordmultiset1.cpp)
ADD_EXECUTABLE(unordmap1 unordmap1.cpp)
ADD_EXECUTABLE(assoarray1 assoarray1.cpp)
ADD_EXECUTABLE(list1old list1old.cpp)
ADD_EXECUTABLE(set1 set1.cpp)
ADD_EXECUTABLE(unordmultiset2 unordmultiset2.cpp)
ADD_EXECUTABLE(algo1 algo1.cpp)
ADD_EXECUTABLE(find1 find1.cpp)
ADD_EXECUTABLE(copybug copybug.cpp)
ADD_EXECUTABLE(copy1 copy1.cpp)
ADD_EXECUTABLE(copy2 copy2.cpp)
ADD_EXECUTABLE(ioiter1 ioiter1.cpp)
ADD_EXECUTABLE(reviter1 reviter1.cpp)
ADD_EXECUTABLE(remove1 remove1.cpp)
ADD_EXECUTABLE(remove2 remove2.cpp)
ADD_EXECUTABLE(remove3 remove3.cpp)
ADD_EXECUTABLE(remove4 remove4.cpp)
ADD_EXECUTABLE(foreach1 foreach1.cpp)
ADD_EXECUTABLE(transform1 transform1.cpp)
ADD_EXECUTABLE(prime1 prime1.cpp)
# ADD_EXECUTABLE(sort1 sort1.cpp)
ADD_EXECUTABLE(lambda1 lambda1.cpp)
ADD_EXECUTABLE(foreach2 foreach2.cpp)
ADD_EXECUTABLE(add1 add1.cpp)
ADD_EXECUTABLE(fo1 fo1.cpp)
ADD_EXECUTABLE(bind1 bind1.cpp)
ADD_EXECUTABLE(iterbug iterbug.cpp)

#target_link_libraries( main Test )
